<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Validation</name>
    </assembly>
    <members>
        <member name="P:Cosmos.Validation.Annotations.CustomAnnotationAttribute.Name">
            <summary>
            Name of this Attribute/Annotation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Annotations.CustomAnnotationAttribute.ErrorMessage">
            <summary>
            Gets or sets message<br />
            消息
            </summary>
        </member>
        <member name="T:Cosmos.Validation.Annotations.IObjectContextVerifiableAnnotation">
            <summary>
            A ObjectContext Verify Interface
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Annotations.IObjectContextVerifiableAnnotation.StrongVerify(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            ObjectContext Verify
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Annotations.IStrongVerifiableAnnotation">
            <summary>
            A Strong Verify Interface
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Annotations.IStrongVerifiableAnnotation.StrongVerify``1(``0)">
            <summary>
            Strong Verify
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Annotations.IStrongVerifiableAnnotation.StrongVerify(System.Type,System.Object)">
            <summary>
            Strong Verify
            </summary>
            <param name="type"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Annotations.IStrongVerifiableAnnotation`1">
            <summary>
            A Strong Verify Interface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Annotations.IStrongVerifiableAnnotation`1.StrongVerify(`0)">
            <summary>
            Strong Verify
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Annotations.VerifiableParamsAttribute">
            <summary>
            Validation Parameter attribute
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Annotations.VerifiableParamsAttribute.Name">
            <summary>
            Name of this Attribute/Annotation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Annotations.VerifiableParamsAttribute.ErrorMessage">
            <summary>
            Gets or sets message<br />
            消息
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Annotations.VerifiableParamsAttribute.ParamName">
            <summary>
            Gets or sets name of parameter
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Annotations.VerifiableParamsAttribute.IgnoreUnexpectedType">
            <summary>
            Unexpected type returns success.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Annotations.VerifiableParamsAttribute.IgnoreNullObject">
            <summary>
            Null object returns false.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Annotations.VerifiableParamsAttribute.Invoke(AspectCore.DynamicProxy.Parameters.ParameterAspectContext,AspectCore.DynamicProxy.Parameters.ParameterAspectDelegate)">
            <summary>
            Invoke
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentInvalidException"></exception>
        </member>
        <member name="M:Cosmos.Validation.Annotations.VerifiableParamsAttribute.IsValid(AspectCore.DynamicProxy.Parameters.Parameter)">
            <summary>
            IsValid
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Annotations.VerifiableParamsAttribute.IsValid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            IsValid
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Annotations.VerifiableParamsAttribute.IsValidImpl(System.Type,System.String,System.Func{System.Object})">
            <summary>
            Invoke internal impl
            </summary>
            <param name="memberType"></param>
            <param name="memberName"></param>
            <param name="memberValueGetter"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.CustomVerifyResult">
            <summary>
            Custom verify result
            </summary>
        </member>
        <member name="P:Cosmos.Validation.CustomVerifyResult.VerifyResult">
            <summary>
            Verify result
            </summary>
        </member>
        <member name="P:Cosmos.Validation.CustomVerifyResult.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Conditions.ConditionOpsHelper.IsHigherPriority(Cosmos.Validation.Internals.Conditions.ConditionOps,Cosmos.Validation.Internals.Conditions.ConditionOps)">
            <summary>
            如果 Right 的优先级高于 Left，
            则需要将 Left 打包为 GroupedToken，然后再进行联立
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.Internals.CorrectVerifyValBlock.AndOrFlag">
            <summary>
            与/或 标记位，用于辅助 Blocks 工作，默认为 true。 <br />
            true - AND <br />
            false - OR
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Rules.LogicCorrectValueRule.InternalLogic">
            <summary>
            The internal logic, <br />
            True = AND (default) <br />
            False = OR
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredString">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredNumeric(Cosmos.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredBoolean">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredGuid">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredDateTime(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredDateInfo(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`1">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`1.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`2">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`2.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredString">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredNumeric(Cosmos.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredBoolean">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredGuid">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredDateTime(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredDateInfo(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredString">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredNumeric(Cosmos.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredBoolean">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredGuid">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredDateTime(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredDateInfo(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.GroupedValueToken">
            <summary>
            Grouped value token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.GroupedValueToken.ActivationConditions2">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: result of activation condition
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.GroupedValueToken.ActivationConditions3">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: Member's Value <br />
            3rd param: result of activation condition
            </summary>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.IGroupedValueToken">
            <summary>
            Interface of grouped value token
            </summary>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.IToken">
            <summary>
            Interface for verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IToken.TokenClass">
            <summary>
            Class of verifiable token
            </summary>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.IValueToken">
            <summary>
            Interface of value token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.IValueToken.Verify(Cosmos.Validation.Internals.VerifiableOpsContext)">
            <summary>
            Verification.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.CustomMessage">
            <summary>
            Custom message.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.ActivationConditions2">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: result of activation condition
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.ActivationConditions3">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: Member's Value <br />
            3rd param: result of activation condition
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.WithActivationConditions">
            <summary>
            Mark whether to use activation conditions.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.WithMessageMode">
            <summary>
            Mark whether to use custom message.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.IValueToken.AppendOrOverwrite">
            <summary>
            If WithMessage is true, this AppendOrOverwrite takes effect. <br />
            true - Append <br />
            false - Overwrite
            </summary>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.IValueToken`1">
            <summary>
            Interface of value token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.TokenClass">
            <summary>
            Class of verifiable token
            </summary>
        </member>
        <member name="F:Cosmos.Validation.Internals.Tokens.TokenClass.ValueToken">
            <summary>
            Normal value token
            </summary>
        </member>
        <member name="F:Cosmos.Validation.Internals.Tokens.TokenClass.GroupedToken">
            <summary>
            Grouped value token
            </summary>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.TokenMutexCalculator">
            <summary>
            Mutex Calculator <br />
            互斥计算工具
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.TokenMutexCalculator.Available(System.Collections.Generic.List{Cosmos.Validation.Internals.Tokens.IValueToken},Cosmos.Validation.Internals.Tokens.IValueToken)">
            <summary>
            Calculate whether the given token is mutually exclusive with the currently existing token group.
            </summary>
            <param name="tokens"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueToken">
            <summary>
            Value token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.TokenClass">
            <summary>
            Class of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.AppendOrOverwrite">
            <summary>
            If WithMessage is true, this AppendOrOverwrite takes effect. <br />
            true - Append <br />
            false - Overwrite
            </summary>
        </member>
        <member name="F:Cosmos.Validation.Internals.Tokens.ValueToken.NoMutuallyExclusiveFlags">
            <summary>
            Empty Mutually Exclusive Flags.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.Verify(Cosmos.Validation.Internals.VerifiableOpsContext)">
            <summary>
            Verification.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.CustomMessage">
            <summary>
            Custom message.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.WithMessageMode">
            <summary>
            Mark whether to use custom message.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.MergeMessage(System.String)">
            <summary>
            Merge message
            </summary>
            <param name="messageSinceToken"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.ActivationConditions2">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: result of activation condition
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.ActivationConditions3">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: Member's Value <br />
            3rd param: result of activation condition
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.WithActivationConditions">
            <summary>
            Mark whether to use activation conditions.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.IsActivate(Cosmos.Validation.Objects.VerifiableMemberContext,System.Object)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.IsActivate(Cosmos.Validation.Objects.VerifiableObjectContext,System.Object)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.GetValueFrom(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Get value from VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.GetValueFrom(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Get value from VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueToken.VerifiableMember">
            <summary>
            Verifiable Member
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.ContainsMember(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Determine whether this verifiable token can be verified against the given VerifiableObjectContext.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.CreateVerifyVal">
            <summary>
            Create a new instance of VerifyVal
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueToken`1">
            <summary>
            Value token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken`1.IsActivate(Cosmos.Validation.Objects.VerifiableMemberContext,`0)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken`1.IsActivate(Cosmos.Validation.Objects.VerifiableObjectContext,`0)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken`1.GetValueFrom(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext, a generic version.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueToken`1.GetValueFrom(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext, a generic version.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken">
            <summary>
            Abstract basic token for collection type.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean},System.String)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2">
            <summary>
            Abstract basic token for collection type, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean},System.String)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken">
            <summary>
            Abstract basic token for compare type.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAllToken">
            <summary>
            All token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAllToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAllToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAllToken`2">
            <summary>
            All token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAllToken`2.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAllToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAnyToken">
            <summary>
            Any token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAnyToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAnyToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAnyToken`2">
            <summary>
            Any token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAnyToken`2.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueAnyToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEmptyToken">
            <summary>
            Empty token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEmptyToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotEmptyToken">
            <summary>
            Not empty token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotEmptyToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken">
            <summary>
            Enum token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Type)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken`1">
            <summary>
            Enum token, a generic version.
            </summary>
            <typeparam name="TEnum"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEnumToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEqualToken">
            <summary>
            Equal token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEqualToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object,System.Collections.IEqualityComparer)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEqualToken`1">
            <summary>
            Equal token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueEqualToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,`0,System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken">
            <summary>
            Not equal token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object,System.Collections.IEqualityComparer)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken`1">
            <summary>
            Not equal token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,`0,System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken">
            <summary>
            Func token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,Cosmos.Validation.CustomVerifyResult})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1">
            <summary>
            Func token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`0,Cosmos.Validation.CustomVerifyResult})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken">
            <summary>
            Greater than or equal token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken.UpdateVal(Cosmos.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken">
            <summary>
            Greater than token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken.UpdateVal(Cosmos.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken">
            <summary>
            In token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{System.Object})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`1">
            <summary>
            In token, a generic version with one generic type.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`0})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`2">
            <summary>
            In token, a generic version with two generic types.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`1})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken">
            <summary>
            Length limited token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken">
            <summary>
            Less than or equal token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken.UpdateVal(Cosmos.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken">
            <summary>
            Less than token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken.UpdateVal(Cosmos.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken">
            <summary>
            Max length limited token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken">
            <summary>
            Min length limited token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNoneToken">
            <summary>
            None token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNoneToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNoneToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNoneToken`2">
            <summary>
            None token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNoneToken`2.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNoneToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken">
            <summary>
            Not-In token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{System.Object})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1">
            <summary>
            Not-In token, a generic version with one generic type.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`0})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2">
            <summary>
            Not-In token, a generic version with two generic types.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`1})">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNullToken">
            <summary>
            Null token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNullToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotNullToken">
            <summary>
            Not-Null token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueNotNullToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken">
            <summary>
            Range token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Object,System.Object,Cosmos.Validation.RangeOptions)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1">
            <summary>
            Range token, a generic version
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,`0,`0,Cosmos.Validation.RangeOptions)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken">
            <summary>
            Regular expression token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Text.RegularExpressions.Regex)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.String,System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Text.RegularExpressions.Regex})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.String},System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1">
            <summary>
            Regular expression token, a generic version
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Text.RegularExpressions.Regex)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.String,System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`0,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`0,System.Text.RegularExpressions.Regex})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Func{`0,System.String},System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredBooleanToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredDateInfoToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Globalization.DateTimeStyles)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredDateTimeToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Globalization.DateTimeStyles)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredGuidToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredNumericToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,Cosmos.Reflection.TypeIsOptions)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredStringToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypesToken">
            <summary>
            Required types token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypesToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Type[])">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypeToken">
            <summary>
            Required type token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypeToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken">
            <summary>
            Scale precision token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Int32,System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Scale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Precision">
            <summary>
            Precision
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.IgnoreTrailingZeros">
            <summary>
            Ignore trailing zeros
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken">
            <summary>
            String-enum token
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Type,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.Valid(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.Valid(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken`1">
            <summary>
            String-enum token, a generic version.
            </summary>
            <typeparam name="TEnum"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken`1.#ctor(Cosmos.Validation.Objects.VerifiableMemberContract,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Validation.Internals.ValidationScope">
            <summary>
            A scoped validation provider
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Internals.ValidationScope.Cosmos#Validation#Internals#ICorrectProvider#Name">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.GetName">
            <summary>
            Get name of validation provider
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Cosmos#Validation#Internals#ICorrectProvider#ExposeProjectManager">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Cosmos#Validation#Internals#ICorrectProvider#ExposeObjectResolver">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Cosmos#Validation#Internals#ICorrectProvider#ExposeCustomValidatorManager">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Cosmos#Validation#Internals#ICorrectProvider#ExposeValidationOptions">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Cosmos#Validation#IValidationProvider#UpdateOptions(Cosmos.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Validation.Internals.ValidationScope.Cosmos#Validation#IValidationProvider#UpdateOptions(System.Action{Cosmos.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="T:Cosmos.Validation.IValidationProvider">
            <summary>
            An interface of validation provider
            </summary>
        </member>
        <member name="M:Cosmos.Validation.IValidationProvider.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationProvider.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationProvider.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationProvider.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationProvider.UpdateOptions(Cosmos.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Validation.IValidationProvider.UpdateOptions(System.Action{Cosmos.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="T:Cosmos.Validation.IPredicateValueRuleBuilder">
            <summary>
            An interface for ValueRueBuilder to wait for activation conditions.
            </summary>
        </member>
        <member name="T:Cosmos.Validation.IPredicateValueRuleBuilder`1">
            <summary>
            An interface for ValueRueBuilder to wait for activation conditions.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Cosmos.Validation.IPredicateValueRuleBuilder`2">
            <summary>
            An interface for ValueRueBuilder to wait for activation conditions.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="T:Cosmos.Validation.IValueRuleBuilder">
            <summary>
            Interface of ValueRuleBuilder
            </summary>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredString">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredNumeric(Cosmos.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredBoolean">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredGuid">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredDateTime(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder.RequiredDateInfo(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.IValueRuleBuilder`1">
            <summary>
            Interface of ValueRuleBuilder
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredString">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredNumeric(Cosmos.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredBoolean">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredGuid">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredDateTime(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`1.RequiredDateInfo(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.IValueRuleBuilder`2">
            <summary>
            Interface of ValueRuleBuilder
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredString">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredNumeric(Cosmos.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredBoolean">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredGuid">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredDateTime(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValueRuleBuilder`2.RequiredDateInfo(System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.ValueRuleBuilderExtensions">
            <summary>
            Extensions for ValueRuleBuilder
            </summary>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.Any``2(Cosmos.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.Any``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.All``2(Cosmos.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            All
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.All``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            All
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.NotAny``2(Cosmos.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Not any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.NotAny``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Not any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.NotAll``2(Cosmos.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Not all
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.NotAll``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Not all
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.None``2(Cosmos.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            None
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.None``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            None
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.In``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.Collections.Generic.ICollection{``2})">
            <summary>
            In
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.In``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},``2[])">
            <summary>
            In
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.NotIn``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.Collections.Generic.ICollection{``2})">
            <summary>
            Not in
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.NotIn``3(Cosmos.Validation.IValueRuleBuilder{``0,``1},``2[])">
            <summary>
            Not in
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.WithMessage(Cosmos.Validation.IValueRuleBuilder,System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.WithMessage(Cosmos.Validation.IValueRuleBuilder,System.String,System.Boolean)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.WithMessage``1(Cosmos.Validation.IValueRuleBuilder{``0},System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.WithMessage``1(Cosmos.Validation.IValueRuleBuilder{``0},System.String,System.Boolean)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.WithMessage``2(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValueRuleBuilderExtensions.WithMessage``2(Cosmos.Validation.IValueRuleBuilder{``0,``1},System.String,System.Boolean)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.IWaitForMessageValueRuleBuilder">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.IWaitForMessageValueRuleBuilder.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.IWaitForMessageValueRuleBuilder`1">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.IWaitForMessageValueRuleBuilder`1.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.IWaitForMessageValueRuleBuilder`2">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.IWaitForMessageValueRuleBuilder`2.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.IVerifyResult">
            <summary>
            The interface used to constrain the verification results.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.IVerifyResult.IsValid">
            <summary>
            Return the verification result.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.IVerifyResult.Errors">
            <summary>
            Return all error messages.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.IVerifyResult.MemberNames">
            <summary>
            Returns the names of all fields with errors.
            </summary>
        </member>
        <member name="T:Cosmos.Validation.RangeOptions">
            <summary>
            Range closure option.
            </summary>
        </member>
        <member name="F:Cosmos.Validation.RangeOptions.OpenInterval">
            <summary>
            Open interval <br />
            开区间
            </summary>
        </member>
        <member name="F:Cosmos.Validation.RangeOptions.CloseInterval">
            <summary>
            Close interval <br />
            闭区间
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Registrars.IWaitForMessageValidationRegistrar">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IWaitForMessageValidationRegistrar.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Registrars.IWaitForMessageValidationRegistrar`1">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IWaitForMessageValidationRegistrar`1.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Registrars.IWaitForMessageValidationRegistrar`2">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Registrars.IWaitForMessageValidationRegistrar`2.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.RequiredRegistrarExtensions.RequiredType(Cosmos.Validation.Registrars.IValueFluentValidationRegistrar,System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.RequiredRegistrarExtensions.RequiredTypes(Cosmos.Validation.Registrars.IValueFluentValidationRegistrar,System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.RequiredRegistrarExtensions.RequiredType``1(Cosmos.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.RequiredRegistrarExtensions.RequiredTypes``1(Cosmos.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="types"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.RequiredRegistrarExtensions.RequiredTypes``2(Cosmos.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="types"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Registrars.ValidationRegistrarWithMessage">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValidationRegistrarWithMessage.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Registrars.ValidationRegistrarWithMessage`1">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValidationRegistrarWithMessage`1.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Registrars.ValidationRegistrarWithMessage`2">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Registrars.ValidationRegistrarWithMessage`2.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.StrategyMode">
            <summary>
            Verify the effective mode of the strategy.
            </summary>
        </member>
        <member name="F:Cosmos.Validation.StrategyMode.Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:Cosmos.Validation.StrategyMode.ItemOverwrite">
            <summary>
            Item overwrite
            </summary>
        </member>
        <member name="F:Cosmos.Validation.StrategyMode.OverallOverwrite">
            <summary>
            Overall overwrite
            </summary>
        </member>
        <member name="T:Cosmos.Validation.ValidationHandler">
            <summary>
            The verification processor is generated by the short-circuit construction mode.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.Verify(System.Type,System.Object,System.String)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.Verify``1(``0)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.Verify``1(``0,System.String)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="instance"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.Verify(Cosmos.Validation.Objects.VerifiableObjectContext,System.String)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="context"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOne(System.Type,System.Object,System.String,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOne``1(System.Object,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOne``1(System.Object,System.String,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOne``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOne``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOne(Cosmos.Validation.Objects.VerifiableMemberContext,System.Type,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="context"></param>
            <param name="declaringType"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithInstance``1(System.Object,System.String,``0)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithInstance``1(System.Object,System.String,``0,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithInstance``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,``0)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithInstance``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,``0,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithDictionary``1(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithDictionary``1(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithDictionary``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyOneWithDictionary``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyMany``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="keyValueCollections"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyMany``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="keyValueCollections"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.VerifyMany(Cosmos.Validation.Objects.VerifiableObjectContext,System.String)">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="context"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationHandler.Merge(System.Collections.Generic.IEnumerable{Cosmos.Validation.Projects.IProject})">
            <summary>
            Merge projects
            </summary>
            <param name="projects"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.ValidationMe">
            <summary>
            The entry of the static validator component.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.RegisterProvider(Cosmos.Validation.IValidationProvider)">
            <summary>
            Register a new ValidationProvider. <br />
            注册一个新的 ValidationProvider。
            </summary>
            <param name="validationProvider"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.Unregister">
            <summary>
            Unregister <br />
            反注册
            </summary>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.RegisterProvider(Cosmos.Validation.IValidationProvider,System.String)">
            <summary>
            Register a new ValidationProvider. <br />
            注册一个新的 ValidationProvider。
            </summary>
            <param name="validationProvider"></param>
            <param name="name"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.OverrideProvider(Cosmos.Validation.IValidationProvider,System.String)">
            <summary>
            Override a ValidationProvider. <br />
            覆盖一个 ValidationProvider。
            </summary>
            <param name="validationProvider"></param>
            <param name="name"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.Use(System.String)">
            <summary>
            According to the given name, an instance of IValidationProvider is returned.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.UpdateDefaultOptions(Cosmos.Validation.ValidationOptions)">
            <summary>
            Override the default options.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.UpdateDefaultOptions(System.Action{Cosmos.Validation.ValidationOptions})">
            <summary>
            Update the default options.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.UpdateMainOptions(Cosmos.Validation.ValidationOptions)">
            <summary>
            Override the main validation provider's options
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.UpdateMainOptions(System.Action{Cosmos.Validation.ValidationOptions})">
            <summary>
            Update the main validation provider's options
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.UpdateOptions(System.String,Cosmos.Validation.ValidationOptions)">
            <summary>
            Override the validation provider's options with the given name.
            </summary>
            <param name="providerName"></param>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationMe.UpdateOptions(System.String,System.Action{Cosmos.Validation.ValidationOptions})">
            <summary>
            Update the validation provider's options with the given name.
            </summary>
            <param name="providerName"></param>
            <param name="optionAct"></param>
        </member>
        <member name="T:Cosmos.Validation.ValidationOptions">
            <summary>
            Validation options
            </summary>
        </member>
        <member name="P:Cosmos.Validation.ValidationOptions.AnnotationEnabled">
            <summary>
            Mark whether the annotation validator is valid.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.ValidationOptions.CustomValidatorEnabled">
            <summary>
            Mark whether the custom validator is valid.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.ValidationOptions.FailureIfInstanceIsNull">
            <summary>
            When the verified instance is empty, whether to return a failure result.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.ValidationOptions.FailureIfProjectNotMatch">
            <summary>
            When the type of rule does not exist, whether to return a failure result.
            </summary>
        </member>
        <member name="T:Cosmos.Validation.AbstractValidationProvider">
            <summary>
            Abstract Validation Provider.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeProjectManager">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeObjectResolver">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeCustomValidatorManager">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeValidationOptions">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.UpdateOptions(Cosmos.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Validation.AbstractValidationProvider.UpdateOptions(System.Action{Cosmos.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="T:Cosmos.Validation.ValidationProvider">
            <summary>
            Validation Provider
            </summary>
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.#ctor(Cosmos.Validation.Projects.IValidationProjectManager,Cosmos.Validation.Objects.IVerifiableObjectResolver,Cosmos.Validation.ValidationOptions)">
            <summary>
            Create an instance of ValidationProvider.
            </summary>
            <param name="projectManager"></param>
            <param name="objectResolver"></param>
            <param name="options"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeProjectManager">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeObjectResolver">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeCustomValidatorManager">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.Cosmos#Validation#Internals#ICorrectProvider#ExposeValidationOptions">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.UpdateOptions(Cosmos.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Cosmos.Validation.ValidationProvider.UpdateOptions(System.Action{Cosmos.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="T:Cosmos.Validation.Validators.AggregationValidator`1">
            <summary>
            Aggregate validator. <br />
            The default built-in validator of Cosmos Validation is a collection of project validators based on types and rules, 
            annotation validators based on annotations, general custom validators based on registered custom validators, etc.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Validation.Validators.AggregationValidator`1.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.AggregationValidator`1.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.AggregationValidator`1.Cosmos#Validation#Validators#ICorrectValidator#IsTypeBinding">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Validators.AggregationValidator`1.Cosmos#Validation#Validators#ICorrectValidator#SourceType">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.Verify(`0)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.Cosmos#Validation#Validators#IValidator#Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.Cosmos#Validation#Validators#IValidator#VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.VerifyOneWithInstance(System.Object,System.String,`0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,`0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.Cosmos#Validation#Validators#IValidator#VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.Cosmos#Validation#Validators#IValidator#VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AggregationValidator`1.Cosmos#Validation#Validators#IValidator#VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.AnnotationValidator">
            <summary>
            Annotation Validator
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.AnnotationValidator.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.AnnotationValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.AnnotationValidator.Cosmos#Validation#Validators#ICorrectValidator#IsTypeBinding">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Validators.AnnotationValidator.Cosmos#Validation#Validators#ICorrectValidator#SourceType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Validators.AnnotationValidator.Instance">
            <summary>
            Create a new instance of Annotation Validator
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.GetInstance">
            <summary>
            Create a new instance of Annotation Validator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.GetInstance(Cosmos.Validation.ValidationOptions)">
            <summary>
            Create a new instance of Annotation Validator with given options
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.GetInstance(Cosmos.Validation.Objects.IVerifiableObjectResolver,Cosmos.Validation.ValidationOptions)">
            <summary>
            Create a new instance of Annotation Validator with given options and Object Resolver
            </summary>
            <param name="objectResolver"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.Verify``1(``0)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.Verify(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOne``2(``1,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOne``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOneWithInstance``2(``1,System.String,``0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOneWithInstance``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,``0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOneWithDictionary``2(``1,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOneWithDictionary``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyOne(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyMany``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="keyValueCollections"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.AnnotationValidator.VerifyMany(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.CustomValidator">
            <summary>
            Custom validator.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.CustomValidator.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.CustomValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.CustomValidator.Cosmos#Validation#Validators#ICorrectValidator#IsTypeBinding">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Validation.Validators.CustomValidator.Cosmos#Validation#Validators#ICorrectValidator#SourceType">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator.VerifyViaContext(Cosmos.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator.VerifyOneViaContext(Cosmos.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.CustomValidator`1">
            <summary>
            Custom validator.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.Verify(`0)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.Cosmos#Validation#Validators#IValidator#Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.Cosmos#Validation#Validators#IValidator#VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.VerifyOneWithInstance(System.Object,System.String,`0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,`0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.Cosmos#Validation#Validators#IValidator#VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.Cosmos#Validation#Validators#IValidator#VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.CustomValidator`1.Cosmos#Validation#Validators#IValidator#VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.IValidator">
            <summary>
            Interface of Cosmos Validator
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.IValidator.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.IValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.IValidator`1">
            <summary>
            Interface of Cosmos Validator, a generic version.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.Verify(`0)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.VerifyOneWithInstance(System.Object,System.String,`0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,`0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.IValidator`1.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.SealedValidator">
            <summary>
            A validator that only returns success information, and cannot be inherited.
            </summary>
        </member>
        <member name="T:Cosmos.Validation.Validators.SealedValidator`1">
            <summary>
            A validator that only returns success information, and cannot be inherited.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Cosmos.Validation.Validators.StrategyValidator">
            <summary>
            Strategy-based validator, used to quickly build the packaging of the strategy validator.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.StrategyValidator.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.StrategyValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.By(Cosmos.Validation.Strategies.IValidationStrategy)">
            <summary>
            Create a strategy validator based on the specified Strategy.
            </summary>
            <param name="strategy"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.By(Cosmos.Validation.Strategies.IValidationStrategy,Cosmos.Validation.ValidationOptions)">
            <summary>
            Create a strategy validator based on the specified Strategy.
            </summary>
            <param name="strategy"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.By``1">
            <summary>
            Create a strategy validator based on the specified Strategy.
            </summary>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.By``2">
            <summary>
            Create a strategy validator based on the specified Strategy.
            </summary>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.By``1(Cosmos.Validation.ValidationOptions)">
            <summary>
            Create a strategy validator based on the specified Strategy.
            </summary>
            <param name="options"></param>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator.By``2(Cosmos.Validation.ValidationOptions)">
            <summary>
            Create a strategy validator based on the specified Strategy.
            </summary>
            <param name="options"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.StrategyValidator`1">
            <summary>
            Strategy-based validator, used to quickly build the packaging of the strategy validator.
            </summary>
            <typeparam name="TStrategy"></typeparam>
        </member>
        <member name="P:Cosmos.Validation.Validators.StrategyValidator`1.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.StrategyValidator`1.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`1.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`1.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`1.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`1.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`1.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.Validators.StrategyValidator`2">
            <summary>
            Strategy-based validator, used to quickly build the packaging of the strategy validator.
            </summary>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Validation.Validators.StrategyValidator`2.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:Cosmos.Validation.Validators.StrategyValidator`2.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.Verify(`1)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},``0)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOneWithInstance(System.Object,System.String,`1)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},``0,`1)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Validators.StrategyValidator`2.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.ValidatorType">
            <summary>
            Validator type.
            </summary>
        </member>
        <member name="F:Cosmos.Validation.ValidatorType.BuildIn">
            <summary>
            Built-in validator.
            </summary>
        </member>
        <member name="F:Cosmos.Validation.ValidatorType.Custom">
            <summary>
            Custom validator.
            </summary>
        </member>
        <member name="T:Cosmos.Validation.ValueRuleMode">
            <summary>
            The effective mode of the value rule.
            </summary>
        </member>
        <member name="F:Cosmos.Validation.ValueRuleMode.Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:Cosmos.Validation.ValueRuleMode.Overwrite">
            <summary>
            Overwrite
            </summary>
        </member>
        <member name="T:Cosmos.Validation.VerifyError">
            <summary>
            Verify the wrong information.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyError.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyError.ViaValidatorType">
            <summary>
            The type of validator that generated this error message.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyError.ValidatorName">
            <summary>
            The name of the validator that generated the error message.
            </summary>
        </member>
        <member name="T:Cosmos.Validation.VerifyFailure">
            <summary>
            It is used to keep the information of verification failure.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyFailure.#ctor(System.String,System.String,System.Object)">
            <summary>
            Create an instance of VerifyFailure.
            </summary>
            <param name="propertyName"></param>
            <param name="errorMessage"></param>
            <param name="verifiedValue"></param>
        </member>
        <member name="P:Cosmos.Validation.VerifyFailure.PropertyName">
            <summary>
            The name of property
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyFailure.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyFailure.VerifiedValue">
            <summary>
            The verified value
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyFailure.Details">
            <summary>
            Error details
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyFailure.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyFailure.ToString">
            <summary>
            To string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyFailure.ToStringVal">
            <summary>
            To Structured StringVal
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyFailure.Create(System.String,System.String)">
            <summary>
            Create a VerifyFailure object based on the given parameters.
            </summary>
            <param name="propertyName"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyFailure.Create(System.String,System.String,System.Object)">
            <summary>
            Create a VerifyFailure object based on the given parameters.
            </summary>
            <param name="propertyName"></param>
            <param name="errorMessage"></param>
            <param name="verifiedValue"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Validation.VerifyResult">
            <summary>
            The object containing the verification result.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.#ctor">
            <summary>
            Create an instance of VerifyResult.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.#ctor(Cosmos.Validation.VerifyFailure)">
            <summary>
            Create an instance of VerifyResult.
            </summary>
            <param name="failure"></param>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.#ctor(System.Collections.Generic.IEnumerable{Cosmos.Validation.VerifyFailure})">
            <summary>
            Create an instance of VerifyResult.
            </summary>
            <param name="failures"></param>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.NameOfExecutedRules">
            <summary>
            Name collection of executed validation rules. 
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.IsValid">
            <summary>
            Return the verification result.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.Errors">
            <summary>
            Return all error messages.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.MemberNames">
            <summary>
            Returns the names of all fields with errors.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.ToString">
            <summary>
            Output the result of VerifyResult as a string, and separate each VerifyFailure message with a newline character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.ToString(System.String)">
            <summary>
            Output the result of VerifyResult as a string, and use the given separator to separate each VerifyFailure message.
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.Success">
            <summary>
            Returns a VerifyResult object marked as successful.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.IsSuccess(Cosmos.Validation.VerifyResult)">
            <summary>
            Determine whether the given VerifyResult object is marked as a successful verification.
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.ByDesign">
            <summary>
            For design reasons, return verification failure.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.NullReference">
            <summary>
            Because it is a null reference, the return verification failed.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.NullReferenceWith(System.String)">
            <summary>
            Because it is a null reference, the verification failed with the given error message returned.
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.UnexpectedType">
            <summary>
            Since it is not the expected type, the return verification failed.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.UnexpectedTypeWith(System.String)">
            <summary>
            Since it is not the expected type, the verification failed with the given error message.
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.UnregisterProjectForSuchType">
            <summary>
            No rules are registered for this type, and verification failure is returned.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyResult.UnregisterProjectForSuchNamedType">
            <summary>
            No rules are registered for this type and name, and verification failure is returned.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.MemberIsNotExists(System.String)">
            <summary>
            The member does not exist, and the verification fails.
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.Merge(Cosmos.Validation.VerifyResult,Cosmos.Validation.VerifyResult[])">
            <summary>
            Combine multiple sub-results into one main result.
            </summary>
            <param name="masterResult"></param>
            <param name="slaveResults"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.MakeTogether(System.Collections.Generic.List{Cosmos.Validation.VerifyResult})">
            <summary>
            Combine multiple results into one result.
            </summary>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.MakeTogether(Cosmos.Validation.VerifyResult[])">
            <summary>
            Combine multiple results into one result.
            </summary>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.ToList(Cosmos.Validation.VerifyResult,Cosmos.Validation.VerifyResult[])">
            <summary>
            Create a VerifyResultCollection object, which contains a set of given VerifyResult.
            </summary>
            <param name="masterResult"></param>
            <param name="slaveResults"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.ToList(System.Collections.Generic.List{Cosmos.Validation.VerifyResult})">
            <summary>
            Create a VerifyResultCollection object, which contains a set of given VerifyResult.
            </summary>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.Raise">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <exception cref="T:Cosmos.Validation.ValidationException"></exception>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.Raise(System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="message"></param>
            <exception cref="T:Cosmos.Validation.ValidationException"></exception>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.Raise(System.Int64,System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
            <exception cref="T:Cosmos.Validation.ValidationException"></exception>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.Raise(System.String,System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="flag"></param>
            <param name="message"></param>
            <exception cref="T:Cosmos.Validation.ValidationException"></exception>
        </member>
        <member name="M:Cosmos.Validation.VerifyResult.Raise(System.Int64,System.String,System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="errorCode"></param>
            <param name="flag"></param>
            <param name="message"></param>
            <exception cref="T:Cosmos.Validation.ValidationException"></exception>
        </member>
        <member name="T:Cosmos.Validation.VerifyResultCollection">
            <summary>
            A collection containing multiple VerifyResults.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResultCollection.#ctor">
            <summary>
            Create an instance of VerifyResultCollection.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResultCollection.#ctor(System.Collections.Generic.IEnumerable{Cosmos.Validation.VerifyResult})">
            <summary>
            Create an instance of VerifyResultCollection.
            </summary>
            <param name="results"></param>
        </member>
        <member name="P:Cosmos.Validation.VerifyResultCollection.IsValid">
            <summary>
            Return the verification result.
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyResultCollection.Errors">
            <summary>
            A collection of errors
            </summary>
        </member>
        <member name="P:Cosmos.Validation.VerifyResultCollection.MemberNames">
            <summary>
            Returns the names of all fields with errors.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResultCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Cosmos.Validation.VerifyResultCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Cosmos.Validation.VerifyResultCollection.Empty">
            <summary>
            Create an empty VerifyResultCollection object.
            </summary>
        </member>
        <member name="M:Cosmos.Validation.VerifyResultCollection.ToOneVerifyResult">
            <summary>
            Combine multiple internal VerifyResults into one and return it.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
