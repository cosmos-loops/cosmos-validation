<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Validation.Dependency</name>
    </assembly>
    <members>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.ResolveScoped(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.ResolveScoped(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.ResolveScoped``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.ResolveScoped``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolveScoped(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolveScoped(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolveScoped``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.Internals.InternalValidationService.RequiredResolveScoped``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.ResolveScoped(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.ResolveScoped(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.ResolveScoped``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.ResolveScoped``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolveScoped(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolveScoped(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolveScoped``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Validation.IValidationService.RequiredResolveScoped``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
    </members>
</doc>
